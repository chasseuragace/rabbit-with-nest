version: '3.8'

services:
  producer:
    build:
      context: ./producer
      dockerfile: Dockerfile
    container_name: producer-service
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: notification_db
      RABBITMQ_URL: amqp://rabbitmq:5672
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - rabbitmq
    volumes:
      - ./producer:/usr/src/app:delegated        # Mount the producer folder
      - /usr/src/app/node_modules                # Persist node_modules
      - /usr/src/app/dist                        # Optional: Persist dist directory
    command: npm run start:dev                   # Run in development mode with hot-reload

  consumer:
    build:
      context: ./consumer
      dockerfile: Dockerfile
    container_name: consumer-service
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: notification_db
      RABBITMQ_URL: amqp://rabbitmq:5672
    depends_on:
      - postgres
      - rabbitmq
    volumes:
      - ./consumer:/usr/src/app:delegated        # Mount the consumer folder
      - /usr/src/app/node_modules                # Persist node_modules
      - /usr/src/app/dist                        # Optional: Persist dist directory
    command: npm run start:dev                   # Run in development mode with hot-reload

  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: notification_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"

volumes:
  postgres_data:
